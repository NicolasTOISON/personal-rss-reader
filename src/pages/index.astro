---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";
import Parser from "rss-parser";

const feedSources = [
  "https://www.smashingmagazine.com/feed/",
  "https://developer.mozilla.org/en-US/blog/rss.xml",
  "https://piccalil.li/feed.xml",
  "https://piccalil.li/the-index/feed.xml",
  "https://cassidoo.co/rss.xml",
  "https://blog.frontend-almanac.com/data/rss",
  "https://whatislove.dev/feed.xml",
  "https://css-tricks.com/feed",
  "https://lea.verou.me/feed.xml",
  "https://www.jameskerr.blog/index.xml",
  "https://web.dev/static/blog/feed.xml",
  "https://tomoweb.dev/rss.xml",
  "https://css-tip.com/feed/feed.xml",
  "https://www.joshwcomeau.com/rss.xml",
  "https://www.sitepoint.com/sitepoint.rss",
  "https://aralroca.com/rss.xml",
  "https://martinfowler.com/feed.atom",
  "https://localghost.dev/rss",
  "https://ethanmarcotte.com/wrote/feed.xml"
];

const sevenDaysAgo = new Date();
sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);

const parser = new Parser();

interface FeedItem {
  feed?: string;
  title?: string;
  link?: string;
  date?: Date;
}

const feedItems: FeedItem[] = [];

await Promise.allSettled(
  feedSources.map(async (source) => {
    try {
      const feed = await parser.parseURL(source);
      feed.items.forEach((item) => {
        const date = item.pubDate ? new Date(item.pubDate) : undefined;
        if (date && date >= sevenDaysAgo) {
          feedItems.push({
            feed: feed.title,
            title: item.title,
            link: item.link,
            date,
          });
        }
      });
    } catch (error) {
      console.error(`Error fetching feed from ${source}:`, error);
    }
  })
);

const sortedFeedItems = feedItems.sort(
  (a, b) => (b.date ?? new Date()).getTime() - (a.date ?? new Date()).getTime()
);
---

<Layout title="Personal RSS Feeder">
  <main>
    <h1>Personal RSS Feeder</h1>
    {
      sortedFeedItems.map((item) => (
        <ul>
          <li>
            <a href={item.link} target="_blank">
              {item.title}
            </a>
            <p>{item.feed}</p>
            <p>{item.date}</p>
          </li>
        </ul>
      ))
    }
  </main>
</Layout>

<style>
  main {
    margin: auto;
    padding: 1rem;
    width: 800px;
    max-width: calc(100% - 2rem);
    color: white;
    font-size: 20px;
    line-height: 1.6;
  }
  .astro-a {
    position: absolute;
    top: -32px;
    left: 50%;
    transform: translatex(-50%);
    width: 220px;
    height: auto;
    z-index: -1;
  }
  h1 {
    font-size: 4rem;
    font-weight: 700;
    line-height: 1;
    text-align: center;
    margin-bottom: 1em;
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .instructions {
    margin-bottom: 2rem;
    border: 1px solid rgba(var(--accent-light), 25%);
    background: linear-gradient(
      rgba(var(--accent-dark), 66%),
      rgba(var(--accent-dark), 33%)
    );
    padding: 1.5rem;
    border-radius: 8px;
  }
  .instructions code {
    font-size: 0.8em;
    font-weight: bold;
    background: rgba(var(--accent-light), 12%);
    color: rgb(var(--accent-light));
    border-radius: 4px;
    padding: 0.3em 0.4em;
  }
  .instructions strong {
    color: rgb(var(--accent-light));
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 2rem;
    padding: 0;
  }
</style>
